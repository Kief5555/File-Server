<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>PrintedWaste</title>
    <meta content="File server | /<%= currentDirectory %>" name="description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="icon"
      type="image/png"
      href="https://cdn.discordapp.com/attachments/1061755202086125678/1085013775893143563/Boosteriod_Rounded.png"
    />
    <meta property="og:title" content="PrintedWaste" />
    <meta property="og:description" content="File server | /<%= currentDirectory %>" />
    <meta
      property="og:image"
      content="https://cdn.discordapp.com/attachments/1061755202086125678/1085013775893143563/Boosteriod_Rounded.png"
    />
    <link
      href="https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css"
      rel="stylesheet"
    />
    <style type="text/css">
      body {
        background-color: #111827;
        color: #ffffff;
        font-family: Arial, sans-serif;
        font-size: 16px;
        line-height: 1.5;
        margin: 0;
        padding: 0;
      }

      .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
      }

      .heading {
        font-size: 32px;
        font-weight: bold;
        margin: 0 0 20px;
        text-align: center;
      }

      .files {
        list-style: none;
        margin: 0;
        padding: 0;
      }

      .file {
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-radius: 10px;
        padding: 10px;
        border: 1px solid #666666;
        margin-bottom: 10px;
        background-color: #1f2937;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s, box-shadow 0.3s;
        overflow: hidden;
        animation: slideIn 0.5s;
        cursor: pointer;
      }

      @keyframes slideIn {
        0% {
          transform: translateX(-100%);
        }
        100% {
          transform: translateX(0);
        }
      }

      .file:hover {
        transform: translateY(-2px);
        box-shadow: 0px 12px 16px rgba(0, 0, 0, 0.2);
        /* slightly dim the color*/
        background-color: #2a2a2a;
      }

      .file img {
        max-width: 50px;
        height: auto;
        margin-right: 10px;
        border-radius: 50%;
      }

      .file-name {
        flex-grow: 1;
        font-weight: bold;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        margin-right: 10px;
      }

      .file-size {
        font-size: 14px;
        font-weight: bold;
        color: #ffffff;
      }

      .dark-mode-toggle {
        position: fixed;
        right: 20px;
        top: 20px;
        background-color: #ffffff;
        color: #1e1e1e;
        border: none;
        border-radius: 50%;
        padding: 10px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        cursor: pointer;
      }

      a {
        color: #ffffff;
        text-decoration: underline;
      }

      /* Search bar */
      .search {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 20px auto;
        max-width: 600px;
      }

      .search input[type="text"] {
        width: 80%;
        padding: 10px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        background-color: #1f2937;
        color: #ffffff;
        outline: none;
      }
      .delete-button {
        background: none;
        border: none;
        cursor: pointer;
        margin-left: 10px;
        /*Make it hidden*/
        display: none;
      }

      .bx-trash {
        font-size: 20px;
        color: #ffffff;
      }
      .bx-trash:hover {
        color: #ff0000;
      }
      .popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.3s ease;
        border-radius: 10px;
      }

      .popup-content {
        background-color: #333;
        padding: 20px;
        border-radius: 10px;
        max-width: 90%;
        text-align: center;
        border-radius: 10px;
        border: 1px solid rgb(255, 255, 255);
      }

      .popup h3 {
        margin-top: 0;
        color: #fff;
      }

      .popup p {
        color: #ccc;
      }

      .popup-close {
        margin-top: 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
      }

      .popup-close:hover {
        background-color: #0056b3;
      }

      .popup.active {
        opacity: 1;
        pointer-events: auto;
      }
      #delete-file {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        color: #ffffff;
        background-color: #0080ff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        position: relative;
        overflow: hidden;
        margin-top: 10px;
        margin-right: 20px;
        transition: background-color 0.3s ease;
      }

      #delete-file:hover {
        background-color: red;
      }
      #cancel-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        color: #ffffff;
        background-color: #0080ff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        position: relative;
        overflow: hidden;
        transition: background-color 0.5s ease;
      }

      #cancel-button:hover {
        background-color: rgb(0, 255, 55);
      }
    </style>
  </head>
  <body>
    <div id="popup" class="popup">
      <div class="popup-content">
        <h3 id="popup-text">Waiting</h3>
        <p id="popup-info">Waiting for content</p>
        <button id="popup-close" class="popup-close">Close</button>
      </div>
    </div>
    <div class="container">
      <a href="/upload?path=<%= currentDirectory %>">
        <h1 class="heading">Files</h1>
      </a>

      <form class="search">
        <input type="text" name="q" placeholder="Search..." id="searchInput" />
      </form>

      <ul class="files">
        <% files.forEach(function(file) { %> <% if (file && file.mimetype &&
        file.mimetype.includes('image')) { %>
        <li
          class="file"
          onclick="window.location.href='/files/<%= file.folder %>/<%= file.filename %>'"
        >
          <div class="file-name">
            <a href="/files/<%= file.folder %>/<%= file.filename %>"
              ><%= file.filename %></a
            >
          </div>
          <% if (file.size) { %>
          <div class="file-size"><%= formatFileSize(file.size) %></div>
          <% } %>
          <button
            class="delete-button"
            onclick="deleteFile('<%= file.folder %>', '<%= file.filename %>')"
          >
            <i class="bx bx-trash"></i>
          </button>
        </li>

        <% } else { %>
        <li
          class="file"
          onclick="window.location.href='/files/<%= file.folder %>/<%= file.filename %>'"
        >
          <div class="file-name">
            <a href="/files/<%= file.folder %>/<%= file.filename %>"
              ><%= file.filename %></a
            >
          </div>
          <% if (file.size) { %>
          <div class="file-size"><%= formatFileSize(file.size) %></div>
          <% } %>
          <button
            class="delete-button"
            onclick="deleteFile('<%= file.folder %>', '<%= file.filename %>')"
          >
            <i class="bx bx-trash"></i>
          </button>
        </li>
        <% } %> <% }); %>
      </ul>
    </div>

    <script>
      function getCookie(name) {
        var cookieValue = null;
        if (document.cookie && document.cookie !== "") {
          var cookies = document.cookie.split(";");
          for (var i = 0; i < cookies.length; i++) {
            var cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === name + "=") {
              cookieValue = decodeURIComponent(
                cookie.substring(name.length + 1)
              );
              break;
            }
          }
        }
        return cookieValue;
      }
      var popup = document.getElementById("popup");
      var popupClose = document.getElementById("popup-close");

      function showPopup(title, message) {
        const popupTitle = document.getElementById("popup-text");
        const popupMessage = document.getElementById("popup-info");

        popupTitle.textContent = title;
        popupMessage.textContent = message;
        popup.classList.add("active");
      }

      function hidePopup() {
        popup.classList.remove("active");
      }
      var delete1 = document.getElementsByName("delete-button");

      const deleteButtons = document.querySelectorAll(".delete-button");

      deleteButtons.forEach((deleteButton) => {
        if (getCookie("username")) {
          deleteButton.style.display = "block";
        } else {
          deleteButton.style.display = "none";
        }
      });
      // Function to delete a file
      function deleteFile(folder, filename) {
        event.stopPropagation(); // Stop event propagation to prevent file download
        showPopup(
          "Confirm",
          `This action cannot be undone. (File name: "${filename}")`
        );
        //add a button to confirm
        const popupMessage = document.getElementById("popup-info");

        const popupForm = document.createElement("form");
        popupForm.className = "popup-form";
        popupForm.id = "popup-form";

        const submitButton = document.createElement("button");
        submitButton.type = "submit";
        submitButton.textContent = "Delete";
        submitButton.className = "popup-button";
        submitButton.id = "delete-file";

        const cancelButton = document.createElement("button");
        cancelButton.type = "button";
        cancelButton.textContent = "Cancel";
        cancelButton.className = "popup-button";
        cancelButton.id = "cancel-button";

        popupForm.appendChild(submitButton);
        popupForm.appendChild(cancelButton);
        popupMessage.appendChild(popupForm);

        //if cancel button is pressed, close popup
        cancelButton.addEventListener("click", () => {
          hidePopup();
        });

        //Hide close button
        const closeButton = document.getElementById("popup-close");
        closeButton.style.display = "none";

        //if there is a username, show the delete button

        //if log out button is pressed, log out
        submitButton.addEventListener("click", (event) => {
          event.preventDefault();
          console.log("shard");
          var xhr = new XMLHttpRequest();
          xhr.open(
            "POST",
            `/api/delete/?folder=${folder}&file=${filename}`,
            true
          );
          xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
          xhr.setRequestHeader("username", getCookie("username"));
          xhr.setRequestHeader("password", getCookie("password"));

          xhr.onload = function () {
            if (xhr.status === 200) {
              // File deleted successfully, you can handle the response here if needed
              // For example, you could remove the file from the DOM
              showPopup("Success", "File deleted successfully");
              setTimeout(() => {
                hidePopup();
                window.location.reload();
              }, 1000);
            } else if (xhr.status === 401) {
              showPopup("Error", "You are not authorized to delete this file");
              setTimeout(() => {
                hidePopup();
              }, 1000);
            } else {
              showPopup("Error", "An error occurred while deleting the file");
              setTimeout(() => {
                hidePopup();
              }, 1000);
            }
          };

          xhr.onerror = function () {
            // Request error, handle the error here
            alert("An error occurred while deleting the file");
            console.error(xhr.statusText);
          };

          xhr.send();
        });
      }

      const searchInput = document.getElementById("searchInput");
      const files = document.getElementsByClassName("file");

      searchInput.addEventListener("input", function () {
        const searchQuery = searchInput.value.toLowerCase();
        for (let file of files) {
          const fileName = file
            .querySelector(".file-name a")
            .textContent.toLowerCase();
          if (fileName.includes(searchQuery)) {
            file.style.display = "flex";
          } else {
            file.style.display = "none";
          }
        }
      });
    </script>
  </body>
</html>
